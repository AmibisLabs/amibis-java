

                        CHANGES

In this files, you will find changes between java OMiSCID versions.
*should: make configurable (through Java and C++) the timeout for control queries
*could: dnssd client auto connect/reconnect
*could: dnssd client has a list of expected servers
*could: Service isa ServiceProxy!

http://gforge.inria.fr/tracker/?atid=1526&group_id=363&func=browse

REMOVE: "Unknown Bip Connector io"


!!! a service video started on prometheus /loc.../svbugdiscovery rev. 5096
p   omiscid                         - Object Oriented Opensource Middleware for 
i   omiscid-avahi-debug             - OMiSCID libraries (using avahi).          VersionÂ : 1.5.0
i   omiscid-dev                     - OMiSCID Headers and Dev files             
p   omiscid-ext                     - Extension for the OMiSCID middleware inclu
p   omiscid-ext-dev                 - OMiSCID Extension development files       
!!! is visible with omiscidgui using mdns but not using jive

1.
r
added missing synchronized to ServiceImpl#connectTo
TODO review synchro here isInitMessageReceived
TODO ==> review all synchro (at least in MessageSocket)
TODO +add test for these failing stuffs

1.5.0
r4950
        fix:  trying to send message (or reply message) through a input connector now properly throws an exception
        fix:  service disapparitions were properly notified but browsing with a new service repository caused disappeared services to be reported as present
        fix:  some corner case problems with connection notifications and early message sending that appeared with the removal of castor-xml
        fix: connector listeners now receive "connected" notifications even when connections are initiated locally (this behavior may be subject to discussion, please contact us in case you'd rather have the opposite to happen)
        impr: convert to JAXB. Omiscid was using castor-xml for its xml communication but it now uses jaxb which is included in Java 6.0 and only requires 2 jars (900k) with java 5.0. JAXB is also faster than castor-xml when used within omiscid
        impr: preferred dnssd factory can now be set programatically (this is important in some rare cases)

1.4.0
r4215
        fix:  a connector listener can now properly remove itself (stop listening) without throwing a concurrent modification exception
        fix:  problem in some cases when using removeAllConnectorListeners, some listeners might keep listening
        fix:  some LocalVariableListener received isValid calls for variables they were not registered to
        fix:  (API) createServiceRepository was improperly spelled (createServiceRepositoy) in ServiceFactory
        fix:  problem with netbeans when release contains castor generated .java files (these .java are not included any more)
        fix:  problem with connector and variable names containing non letter characters
        fix:  it is now impossible to add variables and connectors having problematic names (duplicate names, reserved ones, ...)
        impr: services default variables (owner, peerId, ...) now have same descriptions as in C++ implementation
        impr: now using JiveDNS in place of JmDNS (JiveDNS is a fork of JmDNS incorporating submitted patches and bug fixes)
        fix:  (jmdns) application refusing to shut down (was caused by jmdns) but still happens in certain cases (bug submitted to jivedns)
        fix:  (jmdns) some services were not unregistered when quitting applications with System.exit
        fix:  (avahi) problem with null pointer exception thrown in some cases when registration failed
        impr: named threads to ease debugging
        impr: (API) added access to variable description and type, and connector description throught ServiceProxy interface
        impr: (API) can now specify a service filter when adding a listener to a service repository
        impr: (API) can now specify preferred service connector port and ask for connection to a remote host+port pair
        impr: (API) added Service#getConnectorClientCount that can be used to avoid heavy processing when no clients are connected
        impr: (API) can now optionally avoid validation phase (calls to LocalVariableListener#isValid) when setting variable value from a Service object 

1.3.1
r3063
        fix:  problem with sendToOneClient not sending anything in most of the classical use cases
        fix:  problem occuring when a server sends message in response to connectTo notification. Some messages where arriving too soon and client side listeners where not receiving it
        impr: (API) removed possibility to have a ConnectionRefused exception on connectTo when a connection was closed really fast. As one still have to handle the case where a connected/disconnected notification pair happen in place of this exception, it has been removed

1.3.0
r2907
        fix:  problem of wrong peerId passed to connector listeners when the client is a non-started service and has multiple connectors connected to a same connector
        fix:  no exception was thrown when adding too many connectors (more than 255) (see associated API impr below)
        fix:  querying variable value while having subscribe to its modifications was causing unnecessary remote variable listener notifications
        impr: (API) added closeConnection, closeAllConnections and removeAllConnectorListeners method to the Service interface
        impr: (API) added a ConnectorLimitReached runtime exception on Service#addConnector that is thrown when too many connectors are added to a service
        impr: on the model of removing the possible trailing "-2" on the hostname, all "-" followed by a one or two digit number is removed if needed
        impr: was using 100% cpu when waiting to connectTo (or when trying to connect to connector of buggous/nasty service)

1.2.0
r2609
        fix:  (API) (WARNING) fixing bug #3271 from gforge causes programs using LocalVariableListener#isValid to compile but with changed semantic (second parameter is now the variable name, not the variable current value anymore; current value being accessible using Service#getVariableValue)
        fix:  (API) added missing variable names on Local and Remote VariableListeners
        fix:  problem with avahi and big txt records (services with many variables)
        fix:  problem with jmdns and big txt records (services with many variables)
        fix:  can now safely listen to one variable multiple times with proper notification (was sending multiple notifications to each listener)
        fix:  removed interferences between variable modifications and variable consultation causing multiple notifications of some variable modifications
        fix:  problem with readdition of remote variable change listeners
        fix:  peerId was not shown in variables given by ServiceProxy#getVariables
        impr: (API) minor changes providing Service and ServiceProxy with both getPeerId and getPeerIdAsString methods
        impr: now queries complete service description only when needed (was basically asking to every service)
        impr: it is now possible for RemoteVariableChangeListener to unsubscribe itself when it is called back
        fix:  (gui) in case of subscription to remote variable changes, gui was not handling properly empty new value (it now does)

1.1.0
r2441
        fix:  default "class" variable value is now "Service" as intended
        fix:  getting a remote variable now properly ask the remote service (wrong caching policy)
        fix:  service xml description now uses proper castor version
        fix:  added a try catch around listener callbacks (was trusting listeners) (connector and variable listeners)
        fix:  listener added before connectTo are now properly listening
        fix:  connectors peer id where wrongly generated in some cases
        impr: (API) minor change adding a ConnectionRefused exception on Service#connectTo
        impr: (API) added ServiceRepository class
        impr: (API) added Service#sendReplyToMessage methods
        impr: sensible performance improvement on high bandwidth message receptions
        impr: performance improvement on Service initialisation
        impr: have different options to access dnssd (mdnsResponder, avahi, jmdns, custom proxy for lightweight devices)
        impr: added a default factory that smartly uses available dnssd provider (avahi then mdns then jmdns)
        impr: allows dnssd browser sharing to improve performance of applications using multiple browsers
        impr: cleaner affectation of peer id for searchs and connections before .start()
        impr: in order to handle mDNSResponder vs avahi daemons conflict happening on some configurations, the possible trailing "-2" on the hostname is removed when needed
        impr: Utility class will now be accessible from OSGi and now contains a shortcut Utility.message(String) to Utility.stringToByteArray()

1.0.3
r1700
        fix:  added some fallback behaviours to avoid exception when really old services are present
        impr: made IncorrectConnectorType a RuntimeException

1.0.2
r1614
2006-10-26
        fix:  implemented properly the sendToOneClient using a ServiceProxy
        impr: performance improvement for introspection connections
        fix:  added missing stream closing causing problems with numerous variable change notification
        impr: made some exceptions RuntimeException
        fix:  removed some more synchronization to allow to findService while doing other operations
        fix:  for OSGi, made the service proxy cache dependent of the service that creates the proxy
        impr: throwing some omiscid exceptions (instead of NPE) for some ServiceProxy methods

1.0.1
r1463
        fix: made variable subscription working properly from the common api
        fix: removed deadlock happening in some stressing tests
        fix: peer id propagation to the connectors after registration

1.0.0
        first release
