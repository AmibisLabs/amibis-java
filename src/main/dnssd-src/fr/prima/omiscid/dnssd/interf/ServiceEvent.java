/**
 * Copyright© 2005-2006 INRIA/Université Pierre Mendès-France/Université Joseph Fourier.
 *
 * O3MiSCID (aka OMiSCID) Software written by Sebastien Pesnel, Dominique
 * Vaufreydaz, Patrick Reignier, Remi Emonet and Julien Letessier.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package fr.prima.omiscid.dnssd.interf;

/**
 * Event generated by service browser. Signal the service found, and lost.
 * 
 * @author Sebastien Pesnel refactoring emonet
 */
public class ServiceEvent {
    /** the value for event when a service is lost */
    static public final int LOST = 0;

    /** the value for event when a service is found */
    static public final int FOUND = 1;

    /**
     * the service with more or less data available according that the service
     * is found or lost. if lost, only the service name is available, else all
     * the data are available : host, port, text records
     */
    private ServiceInformation serviceInformation;

    /** the event : service lost or found. */
    private int event;

    /**
     * Contructs a new intance of ServiceEvent
     * 
     * @param s
     *            the service
     * @param e
     *            the kind of event : LOST or FOUND
     */
    public ServiceEvent(ServiceInformation s, int e) {
        serviceInformation = s;
        event = e;
    }

    /**
     * Access to the service information associated with this service event
     * 
     * @return the Service object
     */
    public ServiceInformation getServiceInformation() {
        return serviceInformation;
    }

    /**
     * Access to the kind of event
     * 
     * @return whether this service event notifies that a service is lost
     */
    public boolean isLost() {
        return event == LOST;
    }

    /**
     * Access to the kind of event
     * 
     * @return whether this service event notifies that a service is found
     */
    public boolean isFound() {
        return event == FOUND;
    }
}
