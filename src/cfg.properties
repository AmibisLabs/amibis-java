
dnssdFactory = 4
# 1 ; mdns --> using apple mDNSResponder java wrappers
# 2 ; jmdns --> using 100% pure java jmdns (long warm up time)
# 3 ; client ; omiscid --> using an omiscid custom dnssd server (that must have been started beforehand) 
# 4 ; avahi --> using

sharedFactory = true
# true --> (recommended) one browser will be shared within a given application (more performant)



# These are the aliases used above
# Aliases should not contain dot characters
# Aliases are defined in the following form
#  dnssdFactory.myalias = factory.fully.qualified.class.name

dnssdFactory.0 = fr.prima.omiscid.dnssd..SmartToBeImpl
dnssdFactory.smart = fr.prima.omiscid.dnssd..SmartToBeImpl  

dnssdFactory.1 = fr.prima.omiscid.dnssd.mdns.DNSSDFactoryMdns
dnssdFactory.mdns = fr.prima.omiscid.dnssd.mdns.DNSSDFactoryMdns

dnssdFactory.2 = fr.prima.omiscid.dnssd.jmdns.DNSSDFactoryJmdns
dnssdFactory.jmdns = fr.prima.omiscid.dnssd.jmdns.DNSSDFactoryJmdns

dnssdFactory.3 = fr.prima.omiscid.dnssd.client.DNSSDFactoryOmiscid
dnssdFactory.omiscid = fr.prima.omiscid.dnssd.client.DNSSDFactoryOmiscid
dnssdFactory.client = fr.prima.omiscid.dnssd.client.DNSSDFactoryOmiscid

dnssdFactory.4 = fr.prima.omiscid.dnssd.avahi.DNSSDFactoryAvahi
dnssdFactory.avahi = fr.prima.omiscid.dnssd.avahi.DNSSDFactoryAvahi
# requires libunix.so in the libpath. Use -Djava.library.path or LD_LIBRARY_PATH or put it in the jre (e.g. /usr/lib/jvm/java-6-sun/jre/lib/i386/)
# MUST be shared (sharedFactory set to true)

#KEY.dnssdFactory = dnssdFactory
#KEY.sharedFactory = sharedFactory
#TRUE.sharedFactory = true

